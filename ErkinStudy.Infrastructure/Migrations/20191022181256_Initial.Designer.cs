// <auto-generated />
using System;
using ErkinStudy.Infrastructure.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ErkinStudy.Infrastructure.Migrations
{
    [DbContext(typeof(SubjectRepository))]
    [Migration("20191022181256_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ErkinStudy.Domain.Models.Content", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContentFormat")
                        .HasColumnType("int");

                    b.Property<long?>("LessonId")
                        .HasColumnType("bigint");

                    b.Property<long>("Order")
                        .HasColumnType("bigint");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LessonId");

                    b.ToTable("Contents");
                });

            modelBuilder.Entity("ErkinStudy.Domain.Models.Degree", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Level")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("SubjectId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("Degrees");
                });

            modelBuilder.Entity("ErkinStudy.Domain.Models.Lesson", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Order")
                        .HasColumnType("bigint");

                    b.Property<long?>("ParagraphId")
                        .HasColumnType("bigint");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParagraphId");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("ErkinStudy.Domain.Models.Paragraph", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DegreeId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Order")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DegreeId");

                    b.ToTable("Paragraphs");
                });

            modelBuilder.Entity("ErkinStudy.Domain.Models.Subject", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("ErkinStudy.Domain.Models.Content", b =>
                {
                    b.HasOne("ErkinStudy.Domain.Models.Lesson", "Lesson")
                        .WithMany("Contents")
                        .HasForeignKey("LessonId");
                });

            modelBuilder.Entity("ErkinStudy.Domain.Models.Degree", b =>
                {
                    b.HasOne("ErkinStudy.Domain.Models.Subject", "Subject")
                        .WithMany("Degrees")
                        .HasForeignKey("SubjectId");
                });

            modelBuilder.Entity("ErkinStudy.Domain.Models.Lesson", b =>
                {
                    b.HasOne("ErkinStudy.Domain.Models.Paragraph", "Paragraph")
                        .WithMany("Lessons")
                        .HasForeignKey("ParagraphId");
                });

            modelBuilder.Entity("ErkinStudy.Domain.Models.Paragraph", b =>
                {
                    b.HasOne("ErkinStudy.Domain.Models.Degree", "Degree")
                        .WithMany("Paragraphs")
                        .HasForeignKey("DegreeId");
                });
#pragma warning restore 612, 618
        }
    }
}
