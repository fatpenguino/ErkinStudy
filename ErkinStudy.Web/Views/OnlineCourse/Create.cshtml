@model ErkinStudy.Domain.Entities.OnlineCourses.OnlineCourse
@{
    ViewData["Title"] = "Create";
}
<h2>Create</h2>

<h4>OnlineCourse</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            @if (ViewBag.FolderId != null)
            {
                <input type="hidden" asp-for="FolderId" value="@ViewBag.FolderId" />
            }
            else
            {
                <div class="form-group">
                    <label>Folder Id</label>
                    <select asp-for="FolderId" class="form-control" asp-items="ViewBag.FolderId">
                        <option value="">No Folder</option>
                    </select>
                </div>
            }
            <div class="form-group">
                <label asp-for="Price"></label>
                <input asp-for="Price" class="form-control" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsActive" /> @Html.DisplayNameFor(model => model.IsActive)
                </label>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
