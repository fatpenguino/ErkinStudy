@using ErkinStudy.Infrastructure.Services
@model IEnumerable<ErkinStudy.Domain.Entities.Lessons.Content>
@inject LessonService LessonService
@{
    ViewData["Title"] = "Content List";
    var folderId = Model.Any() ? Model.First().Lesson.FolderId : await LessonService.GetById(ViewBag.LessonId).Result.FolderId;
}

<h3>Contents</h3>
<a asp-controller="Folder" asp-action="Manage" asp-route-id="@folderId" class="btn btn-primary">Back</a>
<p>
    <a asp-action="Create" asp-route-lessonId="@ViewBag.LessonId">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Value)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Order)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ContentFormat)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Lesson)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsActive)
            </th>
	        <th>
		        Actions
	        </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Value)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Order)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ContentFormat)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Lesson.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsActive)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
