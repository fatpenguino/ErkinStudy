@using ErkinStudy.Domain.Enums
@model ErkinStudy.Domain.Entities.Content

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Content</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
	        <div class="form-group">
                <label asp-for="Value" class="control-label">Content</label>
                <input asp-for="Value" class="form-control" />
                <span asp-validation-for="Value" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Order" class="control-label"></label>
                <input asp-for="Order" class="form-control" />
                <span asp-validation-for="Order" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ContentFormat" class="control-label"></label>
                <select asp-for="ContentFormat" class="form-control" asp-items="Html.GetEnumSelectList<ContentFormat>()"></select>
                <span asp-validation-for="ContentFormat" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsActive" /> @Html.DisplayNameFor(model => model.IsActive)
                </label>
            </div>
	        <div class="form-group">
		        <input asp-for="LessonId"  type="hidden" value="@ViewBag.LessonId"/>
		        <input type="submit" value="Create" class="btn btn-primary"/>
	        </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index" asp-route-lessonId="@ViewBag.LessonId">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
